# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


import("//build/ohos.gni")
import("//foundation/appexecfwk/standard/appexecfwk.gni")
import("//foundation/multimodalinput/input/multimodalinput_mini.gni")

config("tools_wukong_config") {
  visibility = [ ":*" ]

  include_dirs = [
    "event_handle/include",
    "module_loader/include",
    "${aafwk_path}/interfaces/innerkits/want/include",
    "${aafwk_path}/interfaces/innerkits/base/include",
    "${aafwk_path}/interfaces/innerkits/want/include/ohos/aafwk/content",
    "${aafwk_path}/services/abilitymgr/include",
    "${aafwk_path}/services/common/include",
    "${aafwk_path}/tools/aa/include",
    "${appexecfwk_path}/common/log/include",
    "${appexecfwk_path}/interfaces/innerkits/libeventhandler/include",
    "//foundation/distributedschedule/samgr/interfaces/innerkits/samgr_proxy/include",
    "//foundation/distributedschedule/dmsfwk/services/dtbschedmgr/include",
    "//foundation/multimodalinput/input/interfaces/native/innerkits/common/include",
    "//foundation/multimodalinput/input/interfaces/native/innerkits/event/include",
    "//foundation/multimodalinput/input/interfaces/native/innerkits/proxy/include",
    "//foundation/communication/ipc/interfaces/innerkits/ipc_core/include",
    "//foundation/appexecfwk/standard/interfaces/innerkits/appexecfwk_core/include/appmgr",
    "//base/hiviewdfx/hisysevent/interfaces/native/innerkits/hisysevent_manager/include",
    "//base/hiviewdfx/hisysevent/interfaces/native/innerkits/hisysevent/include",
    "//base/hiviewdfx/hisysevent/adapter/native/idl/include",
    "//utils/native/base/include",
    "//utils/system/safwk/native/include",
    "//third_party/json/include",
    "include",
  ]

  configs = [ "${appexecfwk_path}/services/bundlemgr:bundlemgr_common_config" ]
}

ohos_source_set("tools_wukong_source_set") {
  sources = [
    "${aafwk_path}/tools/aa/src/shell_command.cpp",
    "src/wukong_main.cpp",
    "src/wukong_command.cpp",
    "src/wukong_app_manager.cpp",
    "src/wukong_event_manager.cpp",
    "src/wukong_exception_manager.cpp",
    "src/wukong_sysevent_listener.cpp",
  ]

  public_configs = [
    "${aafwk_path}/tools/aa:ability_command_config",
    "//foundation/aafwk/standard/services/abilitymgr:abilityms_config",
    "//foundation/aafwk/standard/services/common:common_config",
    "//base/hiviewdfx/hisysevent/interfaces/native/innerkits/hisysevent_manager:hisyseventmanager_config",
    ":tools_wukong_config",
  ]

  cflags = []
  if (target_cpu == "arm") {
    cflags += [ "-DBINDER_IPC_32BIT" ]
  }

  deps = [
    "${aafwk_path}/interfaces/innerkits/want:want",
    "${aafwk_path}/services/abilitymgr:abilityms",
    "${aafwk_path}/interfaces/innerkits/ability_manager:ability_manager",
    "${appexecfwk_path}/common:libappexecfwk_common",
    "${appexecfwk_path}/interfaces/innerkits/appexecfwk_base:appexecfwk_base",
    "${appexecfwk_path}/interfaces/innerkits/appexecfwk_core:appexecfwk_core",
    "${mmi_path}/frameworks/proxy:libmmi-client",
    "${mmi_path}/frameworks/util:libmmi-util",
    "//foundation/aafwk/standard/interfaces/innerkits/base:base",
    "//foundation/aafwk/standard/interfaces/innerkits/want:want",
    "//foundation/aafwk/standard/services/abilitymgr:abilityms",
    "//foundation/communication/ipc/interfaces/innerkits/ipc_core:ipc_core",
    "//foundation/distributedschedule/samgr/interfaces/innerkits/samgr_proxy:samgr_proxy",
    "//utils/native/base:utils",
    "//base/hiviewdfx/hisysevent/interfaces/native/innerkits/hisysevent_manager:libhisyseventmanager",
  ]

  external_deps = [
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
    "hisysevent_native:libhisysevent"
  ]
}

ohos_executable("wukong") {
  deps = [ ":tools_wukong_source_set" ]

  install_enable = false

  subsystem_name = "appexecfwk"
  part_name = "appexecfwk_standard"
}

group("tools_wukong") {
  deps = [ ":wukong" ]
}

